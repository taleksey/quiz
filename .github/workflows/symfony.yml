name: Symfony

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  php-cs-fixer-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install PHP CS Fixer
        run: |
          mkdir --parents tools/php-cs-fixer
          composer install --working-dir=./tools/php-cs-fixer -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Run php-cs-fixer
        run: ./tools/php-cs-fixer/vendor/bin/php-cs-fixer fix ./src/ --dry-run --rules=@PSR12 --diff
  cache-symfony:
    runs-on: ubuntu-latest
    needs: [php-cs-fixer-test]
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, xml, ctype, iconv, intl, pgsql
      - uses: actions/checkout@v2
      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ./vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
  cache-node:
    runs-on: ubuntu-latest
    needs: [php-cs-fixer-test]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      - name: Install Node.js Dependencies
        run: npm install
      - name: Create Node.js build
        run: npm run build
      - name: Test Node.js
        run: npm test
      - name: Cache dependencies Node.js
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./public/build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
  symfony-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: symfony
          POSTGRES_PASSWORD: symfony
          POSTGRES_DB: app_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 5432:5432
    needs: [cache-symfony, cache-node]
    steps:
      - uses: actions/checkout@v2
      - name: Cache dependencies Node.js
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./public/build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ./vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Run Migration
        run: |
          php bin/console --env=test doctrine:migrations:migrate || echo "No migrations found or migration failed"
          php bin/console doctrine:fixtures:load --env=test --append
        env:
          DATABASE_URL: postgresql://symfony:symfony@127.0.0.1:5432/app?charset=utf8
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DATABASE_URL: postgresql://symfony:symfony@127.0.0.1:5432/app?charset=utf8
        run: ./vendor/bin/phpunit
  phpstan-tests:
    runs-on: ubuntu-latest
    needs: [cache-symfony]
    steps:
      - uses: actions/checkout@v2
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ./vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-        
      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyse -l 6 src tests
